name: Deploy Next.js Frontend

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests (if available)
      run: npm test --if-present --passWithNoTests
      continue-on-error: false

    - name: Build Next.js app
      run: npm run build
      env:
        NODE_ENV: production
        CI: true

    - name: Verify build output
      run: |
        if [ ! -d ".next" ]; then
          echo "Build failed - .next directory not found"
          exit 1
        fi
        echo "Build completed successfully"

    - name: Prepare deployment directory on server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USER }}
        key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
        timeout: 30s
        script: |
          # Create backup of current deployment
          if [ -d "/var/www/aigeneratedimages-frontend" ]; then
            sudo cp -r /var/www/aigeneratedimages-frontend /var/www/aigeneratedimages-frontend-backup-$(date +%Y%m%d-%H%M%S)
          fi
          
          # Prepare deployment directory
          sudo mkdir -p /var/www/aigeneratedimages-frontend
          sudo chown -R $USER:$USER /var/www/aigeneratedimages-frontend
          sudo chmod -R 755 /var/www/aigeneratedimages-frontend

    - name: Deploy Next.js build output and app files
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USER }}
        key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
        timeout: 300s
        source: |
          .next/
          public/
          package.json
          package-lock.json
          next.config.js
        target: /var/www/aigeneratedimages-frontend
        rm: true
        strip_components: 0



    - name: Install dependencies & restart Next.js app on server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USER }}
        key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
        timeout: 300s
        script: |
          cd /var/www/aigeneratedimages-frontend
          
          # Install production dependencies
          npm ci --omit=dev --silent
          
          # Stop existing PM2 process
          pm2 delete aigeneratedimages-frontend || true
          
          # Start new PM2 process
          pm2 start npm --name aigeneratedimages-frontend -- start -- --port 3000
          
          # Save PM2 configuration
          pm2 save
          
          # Wait for app to start
          sleep 10
          
          # Check if app is running
          if pm2 list | grep -q "aigeneratedimages-frontend.*online"; then
            echo "✅ Next.js app started successfully"
          else
            echo "❌ Failed to start Next.js app"
            pm2 logs aigeneratedimages-frontend --lines 20
            exit 1
          fi

    - name: Health check
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USER }}
        key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
        timeout: 30s
        script: |
          # Wait a bit more for the app to be fully ready
          sleep 5
          
          # Check if the app responds
          if curl -f -s http://localhost:3000 > /dev/null; then
            echo "✅ Health check passed - App is responding"
          else
            echo "❌ Health check failed - App is not responding"
            pm2 logs aigeneratedimages-frontend --lines 10
            exit 1
          fi

    - name: Reload nginx
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USER }}
        key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
        timeout: 30s
        script: |
          # Test nginx configuration
          sudo nginx -t
          
          # Reload nginx if configuration is valid
          if [ $? -eq 0 ]; then
            sudo systemctl reload nginx
            echo "✅ Nginx reloaded successfully"
          else
            echo "❌ Nginx configuration test failed"
            exit 1
          fi

    - name: Deployment notification
      if: always()
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USER }}
        key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
        timeout: 30s
        script: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "🚀 Deployment completed successfully at $(date)"
            
            # Clean up old backups (keep last 5)
            cd /var/www
            ls -t aigeneratedimages-frontend-backup-* 2>/dev/null | tail -n +6 | xargs -r sudo rm -rf
          else
            echo "💥 Deployment failed at $(date)"
            echo "Check the logs above for details"
          fi